{"version":3,"sources":["Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","title","poster","genres","synopsis","className","MoviePoster","alt","map","genre","index","MovieGenre","text","maxLine","ellipsis","trimRight","basedOn","src","prototype","PropTypes","string","isRequired","array","App","state","_renderMovies","movies","movie","title_english","medium_cover_image","id","_getMovies","a","_callApi","console","log","setState","fetch","then","res","json","data","catch","err","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAKA,SAASA,EAAT,GAAkD,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,SACnC,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKA,UAAU,gBAAf,SACA,cAACC,EAAD,CAAaJ,OAAQA,EAAQK,IAAKN,MAElC,sBAAKI,UAAU,gBAAf,UACI,6BAAKJ,IACL,qBAAKI,UAAU,gBAAf,SACKF,EAAOK,KAAI,SAACC,EAAOC,GAAR,OAAkB,cAACC,EAAD,CAAYF,MAAOA,GAAYC,QAEjE,qBAAKL,UAAU,kBAAf,SACA,cAAC,IAAD,CACIO,KAAMR,EACNS,QAAQ,IACRC,SAAS,MACTC,WAAS,EACTC,QAAQ,oBAQ5B,SAASV,EAAT,GAAoC,IAAdJ,EAAa,EAAbA,OAAQK,EAAK,EAALA,IAC1B,OACI,qBAAKU,IAAKf,EAAQK,IAAKA,EAAKN,MAAOM,EAAKF,UAAU,kBAI1D,SAASM,EAAT,GAA6B,IAARF,EAAO,EAAPA,MACjB,OACI,sBAAMJ,UAAU,eAAhB,SAAgCI,IAIxCT,EAAMkB,UAAY,CACdjB,MAAOkB,IAAUC,OAAOC,WACxBnB,OAAQiB,IAAUC,OAAOC,WACzBlB,OAAQgB,IAAUG,MAAMD,WACxBjB,SAAUe,IAAUC,OAAOC,YAQ/BV,EAAWO,UAAY,CACnBf,OAAQgB,IAAUC,OAAOC,YAGdrB,QCNAuB,E,4MA9CfC,MAAQ,G,EAONC,cAAgB,WAWd,OAVe,EAAKD,MAAME,OAAOlB,KAAI,SAAAmB,GACnC,OAAO,cAAC,EAAD,CACL1B,MAAO0B,EAAMC,cACb1B,OAAQyB,EAAME,mBAEd1B,OAAQwB,EAAMxB,OACdC,SAAUuB,EAAMvB,UAFXuB,EAAMG,Q,EASjBC,W,sBAAa,4BAAAC,EAAA,sEACU,EAAKC,WADf,OACLP,EADK,OAEXQ,QAAQC,IAAIT,GACZ,EAAKU,SAAS,CACZV,WAJS,2C,EAQbO,SAAW,WACT,OAAOI,MAAM,iEACZC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GAAI,OAAIA,EAAKC,KAAKf,UACvBgB,OAAM,SAAAC,GAAG,OAAIT,QAAQC,IAAIQ,O,kEA5B5BC,KAAKb,e,+BA+BI,IACCL,EAAWkB,KAAKpB,MAAhBE,OACR,OACE,qBAAKrB,UAAWqB,EAAQ,MAAQ,eAAhC,SACGA,EAASkB,KAAKnB,gBAAkB,gB,GA1CvBoB,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3f046f11.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LineEllipsis from 'react-lines-ellipsis';\r\nimport './Movie.css';\r\n\r\nfunction Movie({title, poster, genres, synopsis}){\r\n    return(\r\n        <div className=\"Movie\">\r\n            <div className=\"Movie__Column\">\r\n            <MoviePoster poster={poster} alt={title}/>\r\n            </div>\r\n            <div className=\"Movie__Column\">\r\n                <h1>{title}</h1>\r\n                <div className=\"Movie__Genres\">\r\n                    {genres.map((genre, index) => <MovieGenre genre={genre} key={index}/>)}\r\n                </div>\r\n                <div className=\"Movie__Synopsis\">\r\n                <LineEllipsis\r\n                    text={synopsis}\r\n                    maxLine='3'\r\n                    ellipsis='...'\r\n                    trimRight\r\n                    basedOn='letters'\r\n                />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction MoviePoster({poster, alt}){\r\n    return(\r\n        <img src={poster} alt={alt} title={alt} className=\"Movie__Poster\"/>\r\n    )\r\n}\r\n\r\nfunction MovieGenre({genre}){\r\n    return (\r\n        <span className=\"Movie__Genre\">{genre}</span>\r\n    )\r\n}\r\n\r\nMovie.prototype = {\r\n    title: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.array.isRequired,\r\n    synopsis: PropTypes.string.isRequired\r\n}\r\n\r\nMoviePoster.propTypes = {\r\n    poster: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired\r\n}\r\n\r\nMovieGenre.prototype = {\r\n    genres: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Movie;","import React, {Component} from 'react';\nimport './App.css';\nimport Movie from './Movie';\n\nclass App extends Component {\n\nstate = {\n\n}\n\ncomponentDidMount(){\n  this._getMovies();\n}\n  _renderMovies = () => {\n    const movies = this.state.movies.map(movie => {\n      return <Movie\n        title={movie.title_english}\n        poster={movie.medium_cover_image}\n        key={movie.id}\n        genres={movie.genres}\n        synopsis={movie.synopsis}\n      />\n    })\n\n    return movies\n  }\n\n  _getMovies = async() => {\n    const movies = await this._callApi()\n    console.log(movies)\n    this.setState({\n      movies\n    })\n  }\n\n  _callApi = () => {\n    return fetch('https://yts.mx/api/v2/list_movies.json?sort by=download_count')\n    .then(res => res.json())\n    .then(json => json.data.movies)\n    .catch(err => console.log(err))\n  }\n\n  render(){\n    const { movies } = this.state;\n    return (\n      <div className={movies? \"App\" : \"App--loading\"}>\n        {movies ? this._renderMovies() : 'Loading'}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}